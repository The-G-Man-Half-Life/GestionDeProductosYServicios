// <auto-generated />
using System;
using GestionDeProductosYServicios.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionDeProductosYServicios.Migrations
{
    [DbContext(typeof(ApplicationDbcontext))]
    [Migration("20241011183421_CreatingFakeData4")]
    partial class CreatingFakeData4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GestionDeProductosYServicios.Models.Carrier", b =>
                {
                    b.Property<int>("Carrier_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("carrier_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Carrier_id"));

                    b.Property<string>("Carrier_description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("carrier_description");

                    b.Property<string>("Carrier_name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("carrier_name");

                    b.HasKey("Carrier_id");

                    b.ToTable("Carriers");

                    b.HasData(
                        new
                        {
                            Carrier_id = 1,
                            Carrier_description = "Soluta voluptas exercitationem.",
                            Carrier_name = "Maegan"
                        },
                        new
                        {
                            Carrier_id = 2,
                            Carrier_description = "Aut enim earum.",
                            Carrier_name = "Oswald"
                        },
                        new
                        {
                            Carrier_id = 3,
                            Carrier_description = "Iste sequi ipsam et porro ducimus minus.",
                            Carrier_name = "Keaton"
                        },
                        new
                        {
                            Carrier_id = 4,
                            Carrier_description = "Distinctio pariatur aut fugiat debitis.",
                            Carrier_name = "Reese"
                        },
                        new
                        {
                            Carrier_id = 5,
                            Carrier_description = "Rerum eum quis nemo eum inventore et qui facere sit.",
                            Carrier_name = "Alena"
                        },
                        new
                        {
                            Carrier_id = 6,
                            Carrier_description = "Rerum repudiandae esse doloremque officia dolor.",
                            Carrier_name = "Brandi"
                        },
                        new
                        {
                            Carrier_id = 7,
                            Carrier_description = "Animi nihil magnam qui natus quis non impedit.",
                            Carrier_name = "Claudie"
                        },
                        new
                        {
                            Carrier_id = 8,
                            Carrier_description = "Veniam ducimus culpa quae odit fuga ratione eos.",
                            Carrier_name = "Betty"
                        },
                        new
                        {
                            Carrier_id = 9,
                            Carrier_description = "Ut asperiores aliquid nostrum mollitia.",
                            Carrier_name = "Floy"
                        },
                        new
                        {
                            Carrier_id = 10,
                            Carrier_description = "Atque illo neque odit quis reprehenderit aut excepturi facere.",
                            Carrier_name = "Aileen"
                        });
                });

            modelBuilder.Entity("GestionDeProductosYServicios.Models.Category", b =>
                {
                    b.Property<int>("Category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Category_id"));

                    b.Property<string>("Category_description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("category_description");

                    b.Property<string>("Category_name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("category_name");

                    b.HasKey("Category_id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Category_id = 1,
                            Category_description = "Ipsa voluptates est officia corporis aut.",
                            Category_name = "Jewelery"
                        },
                        new
                        {
                            Category_id = 2,
                            Category_description = "Qui incidunt similique cum voluptate deleniti.",
                            Category_name = "Games"
                        },
                        new
                        {
                            Category_id = 3,
                            Category_description = "Sequi et at aliquam aut eum aperiam unde non perferendis.",
                            Category_name = "Computers"
                        },
                        new
                        {
                            Category_id = 4,
                            Category_description = "Quam consectetur et id ipsam.",
                            Category_name = "Tools"
                        },
                        new
                        {
                            Category_id = 5,
                            Category_description = "Placeat similique ut voluptatem.",
                            Category_name = "Electronics"
                        },
                        new
                        {
                            Category_id = 6,
                            Category_description = "Voluptas sequi unde nihil est.",
                            Category_name = "Outdoors"
                        },
                        new
                        {
                            Category_id = 7,
                            Category_description = "Commodi quia neque aut.",
                            Category_name = "Clothing"
                        },
                        new
                        {
                            Category_id = 8,
                            Category_description = "Nobis officia quas alias dolorem sint.",
                            Category_name = "Health"
                        },
                        new
                        {
                            Category_id = 9,
                            Category_description = "Dolores vero perferendis et ut eligendi assumenda.",
                            Category_name = "Baby"
                        },
                        new
                        {
                            Category_id = 10,
                            Category_description = "Eum delectus suscipit modi et aut nulla.",
                            Category_name = "Garden"
                        });
                });

            modelBuilder.Entity("GestionDeProductosYServicios.Models.Client", b =>
                {
                    b.Property<int>("Client_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Client_id"));

                    b.Property<string>("Client_address")
                        .HasColumnType("longtext")
                        .HasColumnName("client_address");

                    b.Property<string>("Client_contact")
                        .HasColumnType("longtext")
                        .HasColumnName("client_contact");

                    b.Property<string>("Client_name")
                        .HasColumnType("longtext")
                        .HasColumnName("client_name");

                    b.HasKey("Client_id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Client_id = 1,
                            Client_address = "8201 Kemmer Squares, New Anastaciotown, French Guiana",
                            Client_contact = "1-637-567-0570",
                            Client_name = "Jared Labadie"
                        },
                        new
                        {
                            Client_id = 2,
                            Client_address = "40792 Armstrong Circles, Maybellborough, Lao People's Democratic Republic",
                            Client_contact = "1-222-454-5771 x8047",
                            Client_name = "Freddie Lowe"
                        },
                        new
                        {
                            Client_id = 3,
                            Client_address = "658 Joyce Crescent, Lake Marquiseside, Bahrain",
                            Client_contact = "1-942-834-7627 x94474",
                            Client_name = "Guadalupe Von"
                        },
                        new
                        {
                            Client_id = 4,
                            Client_address = "610 Eliza Plaza, Kesslerside, Nepal",
                            Client_contact = "790-838-9011",
                            Client_name = "Leilani Zieme"
                        },
                        new
                        {
                            Client_id = 5,
                            Client_address = "884 Tromp Groves, East Elise, Togo",
                            Client_contact = "1-286-856-1700",
                            Client_name = "Johnathan Hickle"
                        },
                        new
                        {
                            Client_id = 6,
                            Client_address = "9871 Kelli Hills, Lake Rossville, Somalia",
                            Client_contact = "209.764.7554 x61962",
                            Client_name = "Buford Schiller"
                        },
                        new
                        {
                            Client_id = 7,
                            Client_address = "644 Osinski Pines, Konopelskibury, Cocos (Keeling) Islands",
                            Client_contact = "1-477-449-9315 x497",
                            Client_name = "Dwight Hyatt"
                        },
                        new
                        {
                            Client_id = 8,
                            Client_address = "830 Tremblay Ports, New Sallieburgh, Portugal",
                            Client_contact = "1-259-859-0370 x28205",
                            Client_name = "John Tromp"
                        },
                        new
                        {
                            Client_id = 9,
                            Client_address = "45887 Gleason Lakes, South Luis, Lebanon",
                            Client_contact = "(436) 835-9841 x353",
                            Client_name = "Heaven Barton"
                        },
                        new
                        {
                            Client_id = 10,
                            Client_address = "819 Kerluke Shoals, East Libby, Afghanistan",
                            Client_contact = "316-897-4002 x8407",
                            Client_name = "Thea Kunze"
                        });
                });

            modelBuilder.Entity("GestionDeProductosYServicios.Models.Order", b =>
                {
                    b.Property<int>("Order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Order_id"));

                    b.Property<int>("Carrier_id")
                        .HasColumnType("int")
                        .HasColumnName("carrier_id");

                    b.Property<int>("Client_id")
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    b.Property<DateOnly?>("Order_creation_date")
                        .HasColumnType("date")
                        .HasColumnName("order_creation_date");

                    b.Property<DateOnly?>("Order_delivery_date")
                        .HasColumnType("date")
                        .HasColumnName("order_delivery_date");

                    b.HasKey("Order_id");

                    b.HasIndex("Carrier_id");

                    b.HasIndex("Client_id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Order_id = 1,
                            Carrier_id = 3,
                            Client_id = 3,
                            Order_creation_date = new DateOnly(2024, 8, 12),
                            Order_delivery_date = new DateOnly(2025, 8, 28)
                        },
                        new
                        {
                            Order_id = 2,
                            Carrier_id = 5,
                            Client_id = 10,
                            Order_creation_date = new DateOnly(2023, 12, 5),
                            Order_delivery_date = new DateOnly(2025, 7, 8)
                        },
                        new
                        {
                            Order_id = 3,
                            Carrier_id = 1,
                            Client_id = 9,
                            Order_creation_date = new DateOnly(2024, 7, 23),
                            Order_delivery_date = new DateOnly(2025, 6, 8)
                        },
                        new
                        {
                            Order_id = 4,
                            Carrier_id = 1,
                            Client_id = 5,
                            Order_creation_date = new DateOnly(2024, 8, 4),
                            Order_delivery_date = new DateOnly(2025, 9, 25)
                        },
                        new
                        {
                            Order_id = 5,
                            Carrier_id = 9,
                            Client_id = 7,
                            Order_creation_date = new DateOnly(2023, 11, 5),
                            Order_delivery_date = new DateOnly(2025, 8, 9)
                        },
                        new
                        {
                            Order_id = 6,
                            Carrier_id = 6,
                            Client_id = 6,
                            Order_creation_date = new DateOnly(2024, 4, 4),
                            Order_delivery_date = new DateOnly(2025, 9, 24)
                        },
                        new
                        {
                            Order_id = 7,
                            Carrier_id = 7,
                            Client_id = 1,
                            Order_creation_date = new DateOnly(2024, 3, 13),
                            Order_delivery_date = new DateOnly(2024, 11, 7)
                        },
                        new
                        {
                            Order_id = 8,
                            Carrier_id = 8,
                            Client_id = 3,
                            Order_creation_date = new DateOnly(2024, 7, 7),
                            Order_delivery_date = new DateOnly(2025, 6, 2)
                        },
                        new
                        {
                            Order_id = 9,
                            Carrier_id = 6,
                            Client_id = 5,
                            Order_creation_date = new DateOnly(2023, 10, 20),
                            Order_delivery_date = new DateOnly(2025, 4, 9)
                        },
                        new
                        {
                            Order_id = 10,
                            Carrier_id = 8,
                            Client_id = 1,
                            Order_creation_date = new DateOnly(2024, 10, 4),
                            Order_delivery_date = new DateOnly(2025, 6, 23)
                        });
                });

            modelBuilder.Entity("GestionDeProductosYServicios.Models.Product", b =>
                {
                    b.Property<int>("Product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Product_id"));

                    b.Property<int>("Category_id")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("Product_description")
                        .HasColumnType("longtext")
                        .HasColumnName("product_description");

                    b.Property<string>("Product_name")
                        .HasColumnType("longtext")
                        .HasColumnName("product_name");

                    b.Property<double>("Product_price")
                        .HasColumnType("double")
                        .HasColumnName("product_price");

                    b.HasKey("Product_id");

                    b.HasIndex("Category_id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Product_id = 1,
                            Category_id = 1,
                            Product_description = "Corrupti nisi labore voluptas nostrum atque ut iure provident eum.",
                            Product_name = "Tasty Plastic Keyboard",
                            Product_price = 409.5720323223282
                        },
                        new
                        {
                            Product_id = 2,
                            Category_id = 2,
                            Product_description = "Ut ut odio et ipsa voluptates autem non nihil tempore.",
                            Product_name = "Sleek Granite Pants",
                            Product_price = 573.89677136887735
                        },
                        new
                        {
                            Product_id = 3,
                            Category_id = 3,
                            Product_description = "Rem accusantium laudantium dolores earum enim eos eos dignissimos qui.",
                            Product_name = "Generic Steel Table",
                            Product_price = 140.55605132023553
                        },
                        new
                        {
                            Product_id = 4,
                            Category_id = 5,
                            Product_description = "Excepturi quis autem sed totam vel expedita excepturi iusto beatae.",
                            Product_name = "Handcrafted Rubber Hat",
                            Product_price = 969.82605508244501
                        },
                        new
                        {
                            Product_id = 5,
                            Category_id = 10,
                            Product_description = "Sit dolores facere aut veritatis harum sit et magnam aspernatur.",
                            Product_name = "Handmade Rubber Cheese",
                            Product_price = 972.44700596112591
                        },
                        new
                        {
                            Product_id = 6,
                            Category_id = 2,
                            Product_description = "Eos nostrum quisquam delectus enim similique rerum cupiditate quas quis.",
                            Product_name = "Unbranded Wooden Shoes",
                            Product_price = 871.02646594924954
                        },
                        new
                        {
                            Product_id = 7,
                            Category_id = 7,
                            Product_description = "Qui ex quis qui sunt itaque voluptate doloremque eius non.",
                            Product_name = "Small Granite Chair",
                            Product_price = 676.49630082857027
                        },
                        new
                        {
                            Product_id = 8,
                            Category_id = 9,
                            Product_description = "Ea praesentium doloribus aut illum quae dignissimos consectetur animi aspernatur.",
                            Product_name = "Gorgeous Soft Soap",
                            Product_price = 898.02884981224224
                        },
                        new
                        {
                            Product_id = 9,
                            Category_id = 9,
                            Product_description = "Aliquid similique et reiciendis delectus a tempora maiores libero qui.",
                            Product_name = "Gorgeous Soft Keyboard",
                            Product_price = 880.18874235449789
                        },
                        new
                        {
                            Product_id = 10,
                            Category_id = 3,
                            Product_description = "Et perspiciatis culpa fugiat corrupti iusto quia libero deleniti error.",
                            Product_name = "Tasty Plastic Shoes",
                            Product_price = 285.7534639812763
                        });
                });

            modelBuilder.Entity("GestionDeProductosYServicios.Models.Product_Order", b =>
                {
                    b.Property<int>("Product_order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_order_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Product_order_id"));

                    b.Property<int>("Order_id")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("Product_id")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("Product_quantity")
                        .HasColumnType("int")
                        .HasColumnName("product_quantity");

                    b.HasKey("Product_order_id");

                    b.HasIndex("Order_id");

                    b.HasIndex("Product_id");

                    b.ToTable("Products_orders");

                    b.HasData(
                        new
                        {
                            Product_order_id = 1,
                            Order_id = 8,
                            Product_id = 8,
                            Product_quantity = 2
                        },
                        new
                        {
                            Product_order_id = 2,
                            Order_id = 7,
                            Product_id = 2,
                            Product_quantity = 3
                        },
                        new
                        {
                            Product_order_id = 3,
                            Order_id = 2,
                            Product_id = 3,
                            Product_quantity = 8
                        },
                        new
                        {
                            Product_order_id = 4,
                            Order_id = 8,
                            Product_id = 5,
                            Product_quantity = 3
                        },
                        new
                        {
                            Product_order_id = 5,
                            Order_id = 9,
                            Product_id = 7,
                            Product_quantity = 2
                        },
                        new
                        {
                            Product_order_id = 6,
                            Order_id = 9,
                            Product_id = 1,
                            Product_quantity = 8
                        },
                        new
                        {
                            Product_order_id = 7,
                            Order_id = 7,
                            Product_id = 2,
                            Product_quantity = 8
                        },
                        new
                        {
                            Product_order_id = 8,
                            Order_id = 6,
                            Product_id = 4,
                            Product_quantity = 3
                        },
                        new
                        {
                            Product_order_id = 9,
                            Order_id = 10,
                            Product_id = 2,
                            Product_quantity = 2
                        },
                        new
                        {
                            Product_order_id = 10,
                            Order_id = 10,
                            Product_id = 10,
                            Product_quantity = 4
                        });
                });

            modelBuilder.Entity("GestionDeProductosYServicios.Models.Shipment", b =>
                {
                    b.Property<int>("Shipment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("shipments_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Shipment_id"));

                    b.Property<int>("Carrier_id")
                        .HasColumnType("int")
                        .HasColumnName("carrier_id");

                    b.Property<DateOnly?>("Shipment_arrival_date")
                        .HasColumnType("date")
                        .HasColumnName("shipment_arrival_date");

                    b.Property<DateOnly?>("Shipment_order_date")
                        .HasColumnType("date")
                        .HasColumnName("shipment_order_date");

                    b.Property<double>("Shipment_price_usa")
                        .HasColumnType("double")
                        .HasColumnName("shipments_price_usa");

                    b.Property<double>("Shipment_weight_kg")
                        .HasColumnType("double")
                        .HasColumnName("shipments_weight_kg");

                    b.HasKey("Shipment_id");

                    b.HasIndex("Carrier_id");

                    b.ToTable("Shipments");

                    b.HasData(
                        new
                        {
                            Shipment_id = 1,
                            Carrier_id = 3,
                            Shipment_arrival_date = new DateOnly(2024, 6, 15),
                            Shipment_order_date = new DateOnly(2024, 2, 17),
                            Shipment_price_usa = 485.74970141600613,
                            Shipment_weight_kg = 12.844849072067436
                        },
                        new
                        {
                            Shipment_id = 2,
                            Carrier_id = 8,
                            Shipment_arrival_date = new DateOnly(2024, 1, 5),
                            Shipment_order_date = new DateOnly(2024, 9, 9),
                            Shipment_price_usa = 180.95674926761703,
                            Shipment_weight_kg = 55.063571212502907
                        },
                        new
                        {
                            Shipment_id = 3,
                            Carrier_id = 5,
                            Shipment_arrival_date = new DateOnly(2024, 8, 30),
                            Shipment_order_date = new DateOnly(2024, 10, 10),
                            Shipment_price_usa = 25.220947322356988,
                            Shipment_weight_kg = 38.895700999402699
                        },
                        new
                        {
                            Shipment_id = 4,
                            Carrier_id = 6,
                            Shipment_arrival_date = new DateOnly(2024, 4, 2),
                            Shipment_order_date = new DateOnly(2024, 9, 29),
                            Shipment_price_usa = 283.31120829789887,
                            Shipment_weight_kg = 4.4869762026088509
                        },
                        new
                        {
                            Shipment_id = 5,
                            Carrier_id = 2,
                            Shipment_arrival_date = new DateOnly(2024, 2, 18),
                            Shipment_order_date = new DateOnly(2024, 5, 1),
                            Shipment_price_usa = 209.20116698286904,
                            Shipment_weight_kg = 18.309228480485441
                        },
                        new
                        {
                            Shipment_id = 6,
                            Carrier_id = 6,
                            Shipment_arrival_date = new DateOnly(2024, 3, 8),
                            Shipment_order_date = new DateOnly(2024, 4, 14),
                            Shipment_price_usa = 118.3841736941496,
                            Shipment_weight_kg = 82.424162793112401
                        },
                        new
                        {
                            Shipment_id = 7,
                            Carrier_id = 10,
                            Shipment_arrival_date = new DateOnly(2024, 3, 23),
                            Shipment_order_date = new DateOnly(2024, 2, 24),
                            Shipment_price_usa = 493.44786560371443,
                            Shipment_weight_kg = 61.32309211454421
                        },
                        new
                        {
                            Shipment_id = 8,
                            Carrier_id = 10,
                            Shipment_arrival_date = new DateOnly(2024, 8, 9),
                            Shipment_order_date = new DateOnly(2024, 3, 8),
                            Shipment_price_usa = 110.59536197434291,
                            Shipment_weight_kg = 63.252616687683052
                        },
                        new
                        {
                            Shipment_id = 9,
                            Carrier_id = 1,
                            Shipment_arrival_date = new DateOnly(2024, 9, 27),
                            Shipment_order_date = new DateOnly(2024, 6, 3),
                            Shipment_price_usa = 50.749999914438462,
                            Shipment_weight_kg = 24.272440556880568
                        },
                        new
                        {
                            Shipment_id = 10,
                            Carrier_id = 3,
                            Shipment_arrival_date = new DateOnly(2024, 10, 7),
                            Shipment_order_date = new DateOnly(2024, 9, 27),
                            Shipment_price_usa = 100.40527171637493,
                            Shipment_weight_kg = 11.683610219677531
                        });
                });

            modelBuilder.Entity("GestionDeProductosYServicios.Models.Shipment_Product", b =>
                {
                    b.Property<int>("Shipment_Product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Shipment_Product_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Shipment_Product_id"));

                    b.Property<int>("Product_amount")
                        .HasColumnType("int")
                        .HasColumnName("product_amount");

                    b.Property<int>("Product_id")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("Shipment_id")
                        .HasColumnType("int")
                        .HasColumnName("shipment_id");

                    b.HasKey("Shipment_Product_id");

                    b.HasIndex("Product_id");

                    b.HasIndex("Shipment_id");

                    b.ToTable("Shipments_Products");

                    b.HasData(
                        new
                        {
                            Shipment_Product_id = 1,
                            Product_amount = 64,
                            Product_id = 5,
                            Shipment_id = 6
                        },
                        new
                        {
                            Shipment_Product_id = 2,
                            Product_amount = 49,
                            Product_id = 1,
                            Shipment_id = 4
                        },
                        new
                        {
                            Shipment_Product_id = 3,
                            Product_amount = 31,
                            Product_id = 8,
                            Shipment_id = 7
                        },
                        new
                        {
                            Shipment_Product_id = 4,
                            Product_amount = 8,
                            Product_id = 9,
                            Shipment_id = 8
                        },
                        new
                        {
                            Shipment_Product_id = 5,
                            Product_amount = 61,
                            Product_id = 1,
                            Shipment_id = 1
                        },
                        new
                        {
                            Shipment_Product_id = 6,
                            Product_amount = 100,
                            Product_id = 9,
                            Shipment_id = 4
                        },
                        new
                        {
                            Shipment_Product_id = 7,
                            Product_amount = 83,
                            Product_id = 5,
                            Shipment_id = 9
                        },
                        new
                        {
                            Shipment_Product_id = 8,
                            Product_amount = 45,
                            Product_id = 10,
                            Shipment_id = 5
                        },
                        new
                        {
                            Shipment_Product_id = 9,
                            Product_amount = 38,
                            Product_id = 10,
                            Shipment_id = 2
                        },
                        new
                        {
                            Shipment_Product_id = 10,
                            Product_amount = 56,
                            Product_id = 9,
                            Shipment_id = 3
                        });
                });

            modelBuilder.Entity("GestionDeProductosYServicios.Models.Order", b =>
                {
                    b.HasOne("GestionDeProductosYServicios.Models.Carrier", "Carrier")
                        .WithMany()
                        .HasForeignKey("Carrier_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionDeProductosYServicios.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("Client_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrier");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("GestionDeProductosYServicios.Models.Product", b =>
                {
                    b.HasOne("GestionDeProductosYServicios.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("Category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GestionDeProductosYServicios.Models.Product_Order", b =>
                {
                    b.HasOne("GestionDeProductosYServicios.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("Order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionDeProductosYServicios.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GestionDeProductosYServicios.Models.Shipment", b =>
                {
                    b.HasOne("GestionDeProductosYServicios.Models.Carrier", "Carrier")
                        .WithMany()
                        .HasForeignKey("Carrier_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrier");
                });

            modelBuilder.Entity("GestionDeProductosYServicios.Models.Shipment_Product", b =>
                {
                    b.HasOne("GestionDeProductosYServicios.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionDeProductosYServicios.Models.Shipment", "Shipment")
                        .WithMany()
                        .HasForeignKey("Shipment_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Shipment");
                });
#pragma warning restore 612, 618
        }
    }
}
